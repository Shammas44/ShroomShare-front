{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { FiltersModalComponent } from '../../filters/filters-modal/filters-modal.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"src/app/utils/shroom-share-api.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../filters/card/card.component\";\nfunction MushroomsPage_app_card_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-card\", 3);\n  }\n  if (rf & 2) {\n    const mushroom_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"mushroom\", mushroom_r1);\n  }\n}\nexport class MushroomsPage {\n  constructor(modalCtrl, api) {\n    this.modalCtrl = modalCtrl;\n    this.api = api;\n    this.mushrooms = [];\n    this.fetchMushrooms({});\n  }\n  openModal() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const modal = yield this.modalCtrl.create({\n        component: FiltersModalComponent\n      });\n      modal.present();\n      const {\n        data,\n        role\n      } = yield modal.onWillDismiss();\n      const form = data;\n      console.log({\n        data,\n        role\n      });\n      if (data) this.fetchMushrooms(form);\n    });\n  }\n  fetchMushrooms(form) {\n    const option = {\n      showPictures: true,\n      currentPage: 1,\n      pageSize: 5\n    };\n    this.api.getMushrooms$(option).subscribe({\n      next: res => {\n        this.mushrooms = [];\n        for (const mushroom of res.mushrooms) {\n          this.mushrooms.push(mushroom);\n        }\n      },\n      error: err => {\n        console.log({\n          err\n        });\n      }\n    });\n  }\n  ngOnInit() {}\n}\nMushroomsPage.ɵfac = function MushroomsPage_Factory(t) {\n  return new (t || MushroomsPage)(i0.ɵɵdirectiveInject(i1.ModalController), i0.ɵɵdirectiveInject(i2.ShroomShareApiService));\n};\nMushroomsPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MushroomsPage,\n  selectors: [[\"app-mushrooms\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[3, \"click\"], [\"name\", \"filter-circle-outline\"], [3, \"mushroom\", 4, \"ngFor\", \"ngForOf\"], [3, \"mushroom\"]],\n  template: function MushroomsPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-content\")(1, \"h2\");\n      i0.ɵɵtext(2, \"page Mushroom\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"ion-button\", 0);\n      i0.ɵɵlistener(\"click\", function MushroomsPage_Template_ion_button_click_3_listener() {\n        return ctx.openModal();\n      });\n      i0.ɵɵelement(4, \"ion-icon\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, MushroomsPage_app_card_5_Template, 1, 1, \"app-card\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.mushrooms);\n    }\n  },\n  dependencies: [i3.NgForOf, i1.IonButton, i1.IonContent, i1.IonIcon, i4.CardComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AAGA,SAASA,qBAAqB,QAAQ,qDAAqD;;;;;;;;ICEzFC,8BAA8E;;;;IAAjCA,sCAAqB;;;ADMpE,OAAM,MAAOC,aAAa;EAExBC,YAAoBC,SAA0B,EAAUC,GAA0B;IAA9D,cAAS,GAATD,SAAS;IAA2B,QAAG,GAAHC,GAAG;IAD3D,cAAS,GAAe,EAAE;IAExB,IAAI,CAACC,cAAc,CAAC,EAAE,CAAC;EACzB;EAEMC,SAAS;;MACb,MAAMC,KAAK,GAAG,MAAM,IAAI,CAACJ,SAAS,CAACK,MAAM,CAAC;QACxCC,SAAS,EAAEV;OACZ,CAAC;MACFQ,KAAK,CAACG,OAAO,EAAE;MACf,MAAM;QAAEC,IAAI;QAAEC;MAAI,CAAE,GAAG,MAAML,KAAK,CAACM,aAAa,EAAE;MAClD,MAAMC,IAAI,GAA0BH,IAAI;MACxCI,OAAO,CAACC,GAAG,CAAC;QAAEL,IAAI;QAAEC;MAAI,CAAE,CAAC;MAC3B,IAAID,IAAI,EAAE,IAAI,CAACN,cAAc,CAACS,IAAI,CAAC;IACrC,CAAC;;EAEDT,cAAc,CAACS,IAAS;IACtB,MAAMG,MAAM,GAAG;MACbC,YAAY,EAAE,IAAI;MAClBC,WAAW,EAAE,CAAC;MACdC,QAAQ,EAAE;KACX;IACD,IAAI,CAAChB,GAAG,CAACiB,aAAa,CAACJ,MAAM,CAAC,CAACK,SAAS,CAAC;MACvCC,IAAI,EAAGC,GAAG,IAAI;QACZ,IAAI,CAACC,SAAS,GAAG,EAAE;QACnB,KAAK,MAAMC,QAAQ,IAAIF,GAAG,CAACC,SAAuB,EAAE;UAClD,IAAI,CAACA,SAAS,CAACE,IAAI,CAACD,QAAQ,CAAC;;MAEjC,CAAC;MACDE,KAAK,EAAGC,GAAG,IAAI;QACbd,OAAO,CAACC,GAAG,CAAC;UAAEa;QAAG,CAAE,CAAC;MACtB;KACD,CAAC;EACJ;EAEAC,QAAQ,IAAI;;;mBApCD7B,aAAa;AAAA;;QAAbA,aAAa;EAAA8B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX1BnC,mCAAa;MACPA,6BAAa;MAAAA,iBAAK;MACtBA,qCAAkC;MAAtBA;QAAA,OAASoC,eAAW;MAAA,EAAC;MAC/BpC,8BAAkD;MACpDA,iBAAa;MACbA,wEAA8E;MAChFA,iBAAc;;;MADmBA,eAAY;MAAZA,uCAAY","names":["FiltersModalComponent","i0","MushroomsPage","constructor","modalCtrl","api","fetchMushrooms","openModal","modal","create","component","present","data","role","onWillDismiss","form","console","log","option","showPictures","currentPage","pageSize","getMushrooms$","subscribe","next","res","mushrooms","mushroom","push","error","err","ngOnInit","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\timot\\OneDrive\\Documents\\HEIG\\semestre-5\\DevMobile\\projet-shroom-share\\ShroomShare-front\\src\\app\\layout\\mushrooms\\mushrooms.page.ts","C:\\Users\\timot\\OneDrive\\Documents\\HEIG\\semestre-5\\DevMobile\\projet-shroom-share\\ShroomShare-front\\src\\app\\layout\\mushrooms\\mushrooms.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { ShroomShareApiService } from 'src/app/utils/shroom-share-api.service';\r\nimport { FiltersModalComponent } from '../../filters/filters-modal/filters-modal.component';\r\nimport { MushroomsFilter, Mushroom } from '../../models/mushrooms';\r\n\r\n@Component({\r\n  selector: 'app-mushrooms',\r\n  templateUrl: './mushrooms.page.html',\r\n  styleUrls: ['./mushrooms.page.scss'],\r\n}) // eslint-disable-line\r\nexport class MushroomsPage implements OnInit {\r\n  mushrooms: Mushroom[] = [];\r\n  constructor(private modalCtrl: ModalController, private api: ShroomShareApiService) {\r\n    this.fetchMushrooms({});\r\n  }\r\n\r\n  async openModal() {\r\n    const modal = await this.modalCtrl.create({\r\n      component: FiltersModalComponent,\r\n    });\r\n    modal.present();\r\n    const { data, role } = await modal.onWillDismiss();\r\n    const form: FiltersModalComponent = data;\r\n    console.log({ data, role });\r\n    if (data) this.fetchMushrooms(form);\r\n  }\r\n\r\n  fetchMushrooms(form: any) {\r\n    const option = {\r\n      showPictures: true,\r\n      currentPage: 1,\r\n      pageSize: 5,\r\n    };\r\n    this.api.getMushrooms$(option).subscribe({\r\n      next: (res) => {\r\n        this.mushrooms = [];\r\n        for (const mushroom of res.mushrooms as Mushroom[]) {\r\n          this.mushrooms.push(mushroom);\r\n        }\r\n      },\r\n      error: (err) => {\r\n        console.log({ err });\r\n      },\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n}\r\n","<ion-content>\r\n  <h2>page Mushroom</h2>\r\n  <ion-button (click)=\"openModal()\">\r\n    <ion-icon name=\"filter-circle-outline\"></ion-icon>\r\n  </ion-button>\r\n  <app-card *ngFor=\"let mushroom of mushrooms\" [mushroom]=\"mushroom\"></app-card>\r\n</ion-content>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}