{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@ionic/angular\";\nfunction MessagePage_ion_text_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-text\", 8);\n    i0.ɵɵtext(1, \"Username or password is invalid.\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class MessagePage {\n  constructor() {}\n  ngOnInit() {}\n}\nMessagePage.ɵfac = function MessagePage_Factory(t) {\n  return new (t || MessagePage)();\n};\nMessagePage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MessagePage,\n  selectors: [[\"app-message\"]],\n  decls: 17,\n  vars: 3,\n  consts: [[3, \"submit\"], [\"messageForm\", \"ngForm\"], [\"position\", \"floating\"], [\"inputmode\", \"text\", \"required\", \"true\", \"name\", \"message\", 3, \"ngModel\", \"ngModelChange\"], [\"username\", \"ngModel\"], [1, \"ion-padding\"], [\"type\", \"submit\", \"expand\", \"block\", 3, \"disabled\"], [\"color\", \"danger\", 4, \"ngIf\"], [\"color\", \"danger\"]],\n  template: function MessagePage_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"message\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\")(5, \"form\", 0, 1);\n      i0.ɵɵlistener(\"submit\", function MessagePage_Template_form_submit_5_listener() {\n        i0.ɵɵrestoreView(_r3);\n        const _r0 = i0.ɵɵreference(6);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(7, \"ion-list\")(8, \"ion-item\")(9, \"ion-label\", 2);\n      i0.ɵɵtext(10, \"Message\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"ion-input\", 3, 4);\n      i0.ɵɵlistener(\"ngModelChange\", function MessagePage_Template_ion_input_ngModelChange_11_listener($event) {\n        return ctx.message.value = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"div\", 5)(14, \"ion-button\", 6);\n      i0.ɵɵtext(15, \"Log in\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(16, MessagePage_ion_text_16_Template, 2, 0, \"ion-text\", 7);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngModel\", ctx.message.value);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginError);\n    }\n  },\n  dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm, i3.IonButton, i3.IonContent, i3.IonHeader, i3.IonInput, i3.IonItem, i3.IonLabel, i3.IonList, i3.IonText, i3.IonTitle, i3.IonToolbar, i3.TextValueAccessor],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAsBMA,mCAA4C;IAAAA,gDAAgC;IAAAA,iBAAW;;;ACf7F,OAAM,MAAOC,WAAW;EAEtBC,eAAgB;EAEhBC,QAAQ,IACR;;;mBALWF,WAAW;AAAA;;QAAXA,WAAW;EAAAG;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MDPxBR,kCAAY;MAEGA,uBAAO;MAAAA,iBAAY;MAIlCA,mCAAa;MACiBA;QAAAA;QAAA;QAAA,OAAUA,gCAAqB;MAAA,EAAC;MAC1DA,gCAAU;MAGyBA,wBAAO;MAAAA,iBAAY;MAClDA,wCAC8B;MAA5BA;QAAA;MAAA,EAA2B;MAACA,iBAAY;MAI9CA,+BAAyB;MAEiDA,uBAAM;MAAAA,iBAAa;MAG3FA,wEAAuF;MACzFA,iBAAM;;;MAVAA,gBAA2B;MAA3BA,2CAA2B;MAMUA,eAA8B;MAA9BA,gDAA8B;MAG7CA,eAAgB;MAAhBA,qCAAgB","names":["i0","MessagePage","constructor","ngOnInit","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\timot\\OneDrive\\Documents\\HEIG\\semestre-5\\DevMobile\\projet-shroom-share\\ShroomShare-front\\src\\app\\layout\\message\\message.page.html","C:\\Users\\timot\\OneDrive\\Documents\\HEIG\\semestre-5\\DevMobile\\projet-shroom-share\\ShroomShare-front\\src\\app\\layout\\message\\message.page.ts"],"sourcesContent":["<ion-header>\n  <ion-toolbar>\n    <ion-title>message</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <form #messageForm=\"ngForm\" (submit)=\"onSubmit(messageForm)\">\n    <ion-list>\n      <!-- Username input -->\n      <ion-item>\n        <ion-label position=\"floating\">Message</ion-label>\n        <ion-input inputmode=\"text\" #username=\"ngModel\" required=\"true\" name=\"message\"\n          [(ngModel)]=\"message.value\"></ion-input>\n      </ion-item>\n    </ion-list>\n\n    <div class=\"ion-padding\">\n      <!-- Submit button -->\n      <ion-button type=\"submit\" expand=\"block\" [disabled]=\"loginForm.invalid\">Log in</ion-button>\n\n      <!-- Error message displayed if the login failed -->\n      <ion-text color=\"danger\" *ngIf=\"loginError\">Username or password is invalid.</ion-text>\n    </div>\n  </form>\n</ion-content>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.page.html',\n  styleUrls: ['./message.page.scss'],\n})\nexport class MessagePage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}